const { Team,TeamMember } = require('../models/models');
const { handleHttpError } = require('../utils/handleError')
const { matchedData } = require("express-validator");
const conection = require("../connection");
const express = require("express");

async function createTeam(req, res) {
  try {
    let userId = req.user.id;
    const { name, sport,logo, max_players_team } = req.body;
    const team = await Team.create({
      name,
      sport,
      logo,
      max_players_team
    });
    const teamId=team.id;
    const captain=1;
    const TeamPlayer = await TeamMember.create({
      userId: userId,
      teamId: teamId,
      captain: captain,
    });


    res.status(201).json(team);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Server Error' });
  }
}


const getTeams = async (req, res) => {
  try {
    var data = "";
    data = await Team.findAll();

    res.send(data);
  } catch (err) {
    console.log(err); //Opcional
    //handleHttpError(res, 'ERROR_GET_ITEMS', 404)
    handleHttpError(res, "ERROR_GET_TEAMS"); //Si nos sirve el de por defecto que hemos establecido, no es necesario pasar el 403
  }
};

const joinTeam=async (req,res)=> {
//let userId = req.body.userId
let userId = req.user.id;
teamId=req.body.id;
captain="0";
//console.log(req.user);

const TeamPlayer = await TeamMember.findOne({
  where: {
    userId: userId,
    teamId: teamId,
  },
});

if (TeamPlayer) {
  // El usuario ya está relacionado con esta actividad
  res.send(`ALREADY joined to the team`);
} else {
  // El usuario no está relacionado con esta actividad
  const TeamPlayer = await TeamMember.create({
    userId: userId,
    teamId: teamId,
    captain: captain,
  });
  res.send(`Join to the team`);
}

//if (!created)
//return res.send("Already susbscribe")
}


const myTeams = async (req, res) => {
  try {
    const idUs = req.user.id;

    const teamMemberData = await TeamMember.findAll({ where: { userId: idUs } });
    const teamIds = teamMemberData.map((teamMemberData) => teamMemberData.teamId);
    console.log(teamIds);

    const teamData = await Team.findAll({ where: { id: teamIds } });

    res.send(teamData);
  } catch (error) {
    console.error(error);
    return res.status(500).send("ERROR GETTING YOUR TEAMS");
  }
};



module.exports={createTeam,getTeams,joinTeam,myTeams}
